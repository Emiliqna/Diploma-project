@model IEnumerable<DechkoWebApp.Models.Product.ProductIndexVM>
@using DechkoWebApp.Models.Order;

@{
    ViewData["Title"] = "Index";
}

<h1>Всички продукти</h1>

@if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
{
    <p>
        <a asp-action="Create">Създай нов продукт</a>
    </p>

}

<form asp-controller="Product" asp-action="Index" method="get">
    <p>
        Марка: <input type="text" name="SearchStringBrandName" />
        Категория: <input type="text" name="SearchStringCategoryName" />

        <input type="submit" value="Филтър" />
        <p class="active">
            <div class="dropdown show">
                <a class="active dropdown-toggle" href="#"
                   id="dropdownMenuLink"
                   data-toggle="dropdown"
                   aria-haspopup="true"
                   aria-expanded="false">
                    Марки
                </a>

                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">

                    <a class="dropdown-item" href="Product?SearchStringBrandName=Barbie&SearchStringCategoryName=">Barbie</a>
                    <a class="dropdown-item" href="Product?SearchStringBrandName=Lego&SearchStringCategoryName=">Lego</a>
                    <a class="dropdown-item" href="Product?SearchStringBrandName=Disney&SearchStringCategoryName=">Disney</a>
                    <a class="dropdown-item" href="Product?SearchStringBrandName=Fisher+Price&SearchStringCategoryName=">Fisher price</a>
                    <a class="dropdown-item" href="Product?SearchStringBrandName=Thinkle+stars&SearchStringCategoryName=">Thinkle stars</a>
                    <a class="dropdown-item" href="Product?SearchStringBrandName=Cayro&SearchStringCategoryName=">Cayro</a>
                    <a class="dropdown-item" href="Product?SearchStringBrandName=Hot+wheels&SearchStringCategoryName=">Hot wheels</a>
                    <a class="dropdown-item" href="Product?SearchStringBrandName=Cayro&SearchStringCategoryName=">Star</a>







                </div>
            </div>
        </p>
    </p>
</form>




<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.BrandId)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.BrandName)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.CategoryId)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Picture)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            @if (this.User.Identity.IsAuthenticated)
            {
                <th>
                    Поръчка
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.BrandId)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.BrandName)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.CategoryId)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    <img src="@Html.DisplayFor(modelItem => item.Picture)" alt="Image" width="100" />
                    @*@Html.DisplayFor(modelItem => item.Pictute)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount) %
                </td>
                @if (this.User.Identity.IsAuthenticated)
                {
                    <td>
                        @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
                   {
                       ProductId = item.Id

                   })
                    </td>
                }
                <td>
                    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Редактирай</a>
                    } |
                    <a asp-action="Details" asp-route-id="@item.Id">Детайли</a> |
                    @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Изтрий</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


